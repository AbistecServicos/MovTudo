-- ========================================
-- SONDAR PERMISS√ïES E POL√çTICAS RLS
-- ========================================
-- Execute cada bloco separadamente
-- ========================================

-- BLOCO 1: VERIFICAR SE RLS EST√Å HABILITADO
SELECT 
    'üîí STATUS DO RLS' AS secao,
    schemaname,
    tablename,
    CASE 
        WHEN rowsecurity THEN '‚úÖ HABILITADO' 
        ELSE '‚ö†Ô∏è DESABILITADO' 
    END AS rls_status
FROM pg_tables
WHERE schemaname = 'public'
ORDER BY tablename;

-- BLOCO 2: LISTAR TODAS AS POL√çTICAS RLS
SELECT 
    'üìã POL√çTICAS RLS EXISTENTES' AS secao,
    schemaname,
    tablename,
    policyname,
    permissive,
    roles,
    cmd AS operation,
    qual AS using_clause
FROM pg_policies
WHERE schemaname = 'public'
ORDER BY tablename, policyname;

-- BLOCO 3: VERIFICAR USU√ÅRIO NO SUPABASE AUTH
SELECT 
    'üë• USU√ÅRIO ADMIN NO AUTH' AS secao,
    id,
    email,
    created_at,
    email_confirmed_at IS NOT NULL AS email_confirmado,
    last_sign_in_at,
    raw_user_meta_data,
    raw_app_meta_data
FROM auth.users
WHERE email = 'almirdss@gmail.com';

-- BLOCO 4: VERIFICAR USU√ÅRIO NA TABELA usuarios
SELECT 
    'üìÑ USU√ÅRIO ADMIN NA TABELA usuarios' AS secao,
    *
FROM usuarios
WHERE email = 'almirdss@gmail.com';

-- BLOCO 5: TESTAR ACESSO √ÄS TABELAS (como admin)
-- Este bloco vai mostrar se o usu√°rio admin consegue acessar as tabelas
SELECT 
    'üîç TESTE DE ACESSO COMO ADMIN' AS secao,
    'usuarios' AS tabela,
    COUNT(*) AS registros_visiveis
FROM usuarios
UNION ALL
SELECT 
    'empresas',
    COUNT(*)
FROM empresas
UNION ALL
SELECT 
    'empresa_associada',
    COUNT(*)
FROM empresa_associada
UNION ALL
SELECT 
    'corridas',
    COUNT(*)
FROM corridas;

-- BLOCO 6: VERIFICAR √çNDICES DE PERFORMANCE
SELECT 
    'üìë √çNDICES EXISTENTES' AS secao,
    schemaname,
    tablename,
    indexname,
    indexdef
FROM pg_indexes
WHERE schemaname = 'public'
ORDER BY tablename, indexname;






